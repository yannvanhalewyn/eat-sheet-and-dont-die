(ns sheet-bucket.models.sheet)

(defn diff->tx
  "Takes a list of diffpaths (usually generated by `shared.diffp) and
  returns a list of datomic transactions to persist that diff."
  [diff-list sheet-eid]
  (map
    #(if-let [retract (:removed %)]
       [:db.fn/retractEntity (:db/id retract)]
       (let [new-entity (or (:added %) (:new-value %))]
         (if-not (nil? new-entity)
           (reduce
             (fn [children [id ref-key]]
               {:db/id id
                ref-key children})
             new-entity
             (reverse (partition-all 2 (cons sheet-eid (:path %))))))))
    diff-list))
